//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""641adbdd-0988-47da-b967-1043d41ad081"",
            ""actions"": [
                {
                    ""name"": ""Blast"",
                    ""type"": ""Button"",
                    ""id"": ""5e543955-b50d-4214-b200-010b045e40d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Discharge"",
                    ""type"": ""Button"",
                    ""id"": ""b7341c1c-f1ee-4de9-a07b-8d478c729dd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Resonance"",
                    ""type"": ""Button"",
                    ""id"": ""011003ae-6bca-4442-84f3-eebfe6e33915"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TripleImpact"",
                    ""type"": ""Button"",
                    ""id"": ""547bd854-8fe0-4204-92a8-c0ad39835c14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ComboAssult"",
                    ""type"": ""Button"",
                    ""id"": ""707d2435-b7d9-4c61-a2e8-8078b73968dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Transition"",
                    ""type"": ""Button"",
                    ""id"": ""cf33874e-6d16-4e16-a1cb-713e1f72b65d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Astra"",
                    ""type"": ""Button"",
                    ""id"": ""5da5bfaf-254d-44ad-be46-789834d77d77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Levitation"",
                    ""type"": ""Button"",
                    ""id"": ""9a98e2d5-0c1f-456f-b93e-86ab27398808"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1771eec4-1834-4fe9-93dd-b2c6e799da17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""42e01cc7-7e1f-4293-9241-bd6cfbe1bf95"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Potion"",
                    ""type"": ""Button"",
                    ""id"": ""48a6df7c-42e4-4747-8b0d-82ca8a395d62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlastDischarge"",
                    ""type"": ""Button"",
                    ""id"": ""53c1048a-661e-4514-b749-c268f0060d8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5de1bebc-e1f4-4271-8ed4-72a849ebc0ae"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Blast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee03217e-412b-4197-947e-44a009e8a3c3"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Discharge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01d7131f-fca9-44a4-aa25-ebb4d3d89e09"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resonance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69bcfb73-e986-4703-bf45-d6bc223f63fd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TripleImpact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9033efc1-99f5-4baa-865c-25a4e6dd49c1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ComboAssult"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b2af4185-3399-4c06-950e-db8981516463"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9f0d2e91-d58e-4677-85bd-988789994d79"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""62687af5-9f41-487a-9e05-ff951682710c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""790292b8-ad14-4db6-a853-9551c0c0f3d1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""50426561-f167-4b32-9fcb-401f2166b8ef"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""928d7231-ee5d-4ad5-8be8-18ed180b17d7"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8336da5-760b-4907-9ce2-57bb584c1bd4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Transition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7fe9743-6048-42f9-9ffc-9241baad75bc"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ef09f53-29d0-44ff-a97b-2f15dcfe208e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlastDischarge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a2406f6-50d3-4db4-80c7-0e18757b01f7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Astra"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""4e8b4776-08df-4ec2-b70b-777bab7cd835"",
            ""actions"": [
                {
                    ""name"": ""Point"",
                    ""type"": ""Button"",
                    ""id"": ""126e5d3e-6dcd-45eb-92e9-65ebfa1547c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""1d556e6b-35db-4096-9b6f-32858042d462"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll Wheel"",
                    ""type"": ""Button"",
                    ""id"": ""d290de36-d5f4-4468-adc8-52313b5fccdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""db1be12a-33c2-4e87-8574-e7d67320e0be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""831b4631-dcbe-465b-a0ee-14f28aba2570"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIToggle"",
                    ""type"": ""Button"",
                    ""id"": ""cea9fdec-d35b-465e-b4de-2d1ae6dc8319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillPOP"",
                    ""type"": ""Button"",
                    ""id"": ""575e2d8a-fbc3-4316-bd0e-610bc1895cfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortcutsPOP"",
                    ""type"": ""Button"",
                    ""id"": ""6ddb363a-6a88-4127-a2b3-9e61fd011eba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drag"",
                    ""type"": ""Button"",
                    ""id"": ""7a66c845-690a-420a-ae6d-4885b47b769a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4a409a0c-ab5b-4633-9f40-90e33434b256"",
                    ""path"": ""<Pointer>/pOSITION"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46eb3359-8ebe-439f-86ca-f5b2c64a1aa2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2ae2c60-a1ce-40d9-a391-650a05e81a4a"",
                    ""path"": ""<Pointer>/Scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a3eb547-e20b-465d-bf62-12bf0350badc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38214de5-4b39-464e-bbaa-b7d9140303a0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""718e9cc2-56e2-4b9c-8d10-821e97401936"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a3950ae-9b97-484d-a583-08b3bd41ac1b"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillPOP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d33bdc78-aa0e-4570-ba26-6d00d5001307"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShortcutsPOP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""8486129d-e1cb-48f4-9292-065b0276fd4b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""3c315a82-e0bb-4bdc-ba07-355a74c6af8c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""07b8bb38-7612-4d1c-8423-7c2c385de858"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Blast = m_Player.FindAction("Blast", throwIfNotFound: true);
        m_Player_Discharge = m_Player.FindAction("Discharge", throwIfNotFound: true);
        m_Player_Resonance = m_Player.FindAction("Resonance", throwIfNotFound: true);
        m_Player_TripleImpact = m_Player.FindAction("TripleImpact", throwIfNotFound: true);
        m_Player_ComboAssult = m_Player.FindAction("ComboAssult", throwIfNotFound: true);
        m_Player_Transition = m_Player.FindAction("Transition", throwIfNotFound: true);
        m_Player_Astra = m_Player.FindAction("Astra", throwIfNotFound: true);
        m_Player_Levitation = m_Player.FindAction("Levitation", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Potion = m_Player.FindAction("Potion", throwIfNotFound: true);
        m_Player_BlastDischarge = m_Player.FindAction("BlastDischarge", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("Scroll Wheel", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_UIToggle = m_UI.FindAction("UIToggle", throwIfNotFound: true);
        m_UI_SkillPOP = m_UI.FindAction("SkillPOP", throwIfNotFound: true);
        m_UI_ShortcutsPOP = m_UI.FindAction("ShortcutsPOP", throwIfNotFound: true);
        m_UI_Drag = m_UI.FindAction("Drag", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Blast;
    private readonly InputAction m_Player_Discharge;
    private readonly InputAction m_Player_Resonance;
    private readonly InputAction m_Player_TripleImpact;
    private readonly InputAction m_Player_ComboAssult;
    private readonly InputAction m_Player_Transition;
    private readonly InputAction m_Player_Astra;
    private readonly InputAction m_Player_Levitation;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Potion;
    private readonly InputAction m_Player_BlastDischarge;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Blast => m_Wrapper.m_Player_Blast;
        public InputAction @Discharge => m_Wrapper.m_Player_Discharge;
        public InputAction @Resonance => m_Wrapper.m_Player_Resonance;
        public InputAction @TripleImpact => m_Wrapper.m_Player_TripleImpact;
        public InputAction @ComboAssult => m_Wrapper.m_Player_ComboAssult;
        public InputAction @Transition => m_Wrapper.m_Player_Transition;
        public InputAction @Astra => m_Wrapper.m_Player_Astra;
        public InputAction @Levitation => m_Wrapper.m_Player_Levitation;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Potion => m_Wrapper.m_Player_Potion;
        public InputAction @BlastDischarge => m_Wrapper.m_Player_BlastDischarge;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Blast.started += instance.OnBlast;
            @Blast.performed += instance.OnBlast;
            @Blast.canceled += instance.OnBlast;
            @Discharge.started += instance.OnDischarge;
            @Discharge.performed += instance.OnDischarge;
            @Discharge.canceled += instance.OnDischarge;
            @Resonance.started += instance.OnResonance;
            @Resonance.performed += instance.OnResonance;
            @Resonance.canceled += instance.OnResonance;
            @TripleImpact.started += instance.OnTripleImpact;
            @TripleImpact.performed += instance.OnTripleImpact;
            @TripleImpact.canceled += instance.OnTripleImpact;
            @ComboAssult.started += instance.OnComboAssult;
            @ComboAssult.performed += instance.OnComboAssult;
            @ComboAssult.canceled += instance.OnComboAssult;
            @Transition.started += instance.OnTransition;
            @Transition.performed += instance.OnTransition;
            @Transition.canceled += instance.OnTransition;
            @Astra.started += instance.OnAstra;
            @Astra.performed += instance.OnAstra;
            @Astra.canceled += instance.OnAstra;
            @Levitation.started += instance.OnLevitation;
            @Levitation.performed += instance.OnLevitation;
            @Levitation.canceled += instance.OnLevitation;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Potion.started += instance.OnPotion;
            @Potion.performed += instance.OnPotion;
            @Potion.canceled += instance.OnPotion;
            @BlastDischarge.started += instance.OnBlastDischarge;
            @BlastDischarge.performed += instance.OnBlastDischarge;
            @BlastDischarge.canceled += instance.OnBlastDischarge;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Blast.started -= instance.OnBlast;
            @Blast.performed -= instance.OnBlast;
            @Blast.canceled -= instance.OnBlast;
            @Discharge.started -= instance.OnDischarge;
            @Discharge.performed -= instance.OnDischarge;
            @Discharge.canceled -= instance.OnDischarge;
            @Resonance.started -= instance.OnResonance;
            @Resonance.performed -= instance.OnResonance;
            @Resonance.canceled -= instance.OnResonance;
            @TripleImpact.started -= instance.OnTripleImpact;
            @TripleImpact.performed -= instance.OnTripleImpact;
            @TripleImpact.canceled -= instance.OnTripleImpact;
            @ComboAssult.started -= instance.OnComboAssult;
            @ComboAssult.performed -= instance.OnComboAssult;
            @ComboAssult.canceled -= instance.OnComboAssult;
            @Transition.started -= instance.OnTransition;
            @Transition.performed -= instance.OnTransition;
            @Transition.canceled -= instance.OnTransition;
            @Astra.started -= instance.OnAstra;
            @Astra.performed -= instance.OnAstra;
            @Astra.canceled -= instance.OnAstra;
            @Levitation.started -= instance.OnLevitation;
            @Levitation.performed -= instance.OnLevitation;
            @Levitation.canceled -= instance.OnLevitation;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Potion.started -= instance.OnPotion;
            @Potion.performed -= instance.OnPotion;
            @Potion.canceled -= instance.OnPotion;
            @BlastDischarge.started -= instance.OnBlastDischarge;
            @BlastDischarge.performed -= instance.OnBlastDischarge;
            @BlastDischarge.canceled -= instance.OnBlastDischarge;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_UIToggle;
    private readonly InputAction m_UI_SkillPOP;
    private readonly InputAction m_UI_ShortcutsPOP;
    private readonly InputAction m_UI_Drag;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @UIToggle => m_Wrapper.m_UI_UIToggle;
        public InputAction @SkillPOP => m_Wrapper.m_UI_SkillPOP;
        public InputAction @ShortcutsPOP => m_Wrapper.m_UI_ShortcutsPOP;
        public InputAction @Drag => m_Wrapper.m_UI_Drag;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @UIToggle.started += instance.OnUIToggle;
            @UIToggle.performed += instance.OnUIToggle;
            @UIToggle.canceled += instance.OnUIToggle;
            @SkillPOP.started += instance.OnSkillPOP;
            @SkillPOP.performed += instance.OnSkillPOP;
            @SkillPOP.canceled += instance.OnSkillPOP;
            @ShortcutsPOP.started += instance.OnShortcutsPOP;
            @ShortcutsPOP.performed += instance.OnShortcutsPOP;
            @ShortcutsPOP.canceled += instance.OnShortcutsPOP;
            @Drag.started += instance.OnDrag;
            @Drag.performed += instance.OnDrag;
            @Drag.canceled += instance.OnDrag;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @UIToggle.started -= instance.OnUIToggle;
            @UIToggle.performed -= instance.OnUIToggle;
            @UIToggle.canceled -= instance.OnUIToggle;
            @SkillPOP.started -= instance.OnSkillPOP;
            @SkillPOP.performed -= instance.OnSkillPOP;
            @SkillPOP.canceled -= instance.OnSkillPOP;
            @ShortcutsPOP.started -= instance.OnShortcutsPOP;
            @ShortcutsPOP.performed -= instance.OnShortcutsPOP;
            @ShortcutsPOP.canceled -= instance.OnShortcutsPOP;
            @Drag.started -= instance.OnDrag;
            @Drag.performed -= instance.OnDrag;
            @Drag.canceled -= instance.OnDrag;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerActions
    {
        void OnBlast(InputAction.CallbackContext context);
        void OnDischarge(InputAction.CallbackContext context);
        void OnResonance(InputAction.CallbackContext context);
        void OnTripleImpact(InputAction.CallbackContext context);
        void OnComboAssult(InputAction.CallbackContext context);
        void OnTransition(InputAction.CallbackContext context);
        void OnAstra(InputAction.CallbackContext context);
        void OnLevitation(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnPotion(InputAction.CallbackContext context);
        void OnBlastDischarge(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnUIToggle(InputAction.CallbackContext context);
        void OnSkillPOP(InputAction.CallbackContext context);
        void OnShortcutsPOP(InputAction.CallbackContext context);
        void OnDrag(InputAction.CallbackContext context);
    }
}
